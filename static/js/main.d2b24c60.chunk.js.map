{"version":3,"sources":["models/types.ts","api/index.ts","store/teams.store.ts","store/players.store.ts","store/games.store.ts","models/inversify.config.ts","pages/home/home.tsx","pages/team/team.tsx","pages/player/player.tsx","pages/main-layout/layout.tsx","index.tsx"],"names":["TYPES","TeamsStoreModel","Symbol","for","PlayersStoreModel","GamesStoreModel","baseURL","observableMain$","Observable","subscriber","fetchMainApi","then","v","next","a","async","request","post","body","console","log","data","fetchPlayersApi","id","send","team_id","fetchGamesApi","team_one_id","TeamsStore","injectable","subscribe","x","teams","error","err","this","length","R","name","observable","action","PlayersStore","players","alert","message","userId","find","history","GamesStore","inject","games","_teams","getNameById","mainContainer","Container","bind","to","inSingletonScope","Meta","Card","teamsStore","get","Home","observer","useEffect","getTeams","map","team","key","hoverable","style","width","margin","padding","display","flexDirection","alignItems","cover","alt","src","logo_url","height","onClick","push","title","description","budget","textAlign","playersStore","gamesStore","TeamComponent","match","params","getPlayers","getGames","header","itemLayout","dataSource","renderItem","item","Item","playerToogle","avatar","flag_url","nationality","marginLeft","getTeamNameById","team_two_id","team_one_goals","team_two_goals","Player","getPlayersHistory","goals","Header","Layout","Sider","Content","MainLayout","useState","collapsed","setCollapsed","trigger","collapsible","className","theme","mode","defaultSelectedKeys","type","background","minHeight","justifyContent","exact","path","render","component","createBrowserHistory","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d2b24c60.chunk.js","sourcesContent":["const TYPES = {\n  TeamsStoreModel: Symbol.for(\"TeamsStoreModel\"),\n  PlayersStoreModel: Symbol.for(\"PlayersStoreModel\"),\n  GamesStoreModel: Symbol.for(\"GamesStoreModel\")\n};\n\nexport { TYPES };","import request from 'superagent'\nimport { Observable } from 'rxjs';\n\nconst baseURL = 'https://alphafx-code-test-api.herokuapp.com'\n\nexport const observableMain$ = new Observable(subscriber => {\n  fetchMainApi().then(v => subscriber.next(v))\n});\n\nexport const fetchMainApi = async () => {\n  const {body} = await request.post(\n    `${baseURL}/api/teams`\n  )\n  console.log('main API - ', body.data)\n  return body.data\n}\n\nexport const fetchPlayersApi = async (id: string) => {\n  const {body} = await request.post(\n    `${baseURL}/api/teams/players`\n  ).send({ team_id: id})\n  console.log('players API - ', body.data)\n  return body.data\n}\n\nexport const fetchGamesApi = async (id: string) => {\n  const {body} = await request.post(\n    `${baseURL}/api/teams/games`\n  ).send({ team_one_id: id})\n  console.log('games API - ', body.data)\n  return body.data\n}","import { observable, action } from 'mobx'\nimport * as R from 'ramda'\nimport { injectable } from \"inversify\"\nimport \"reflect-metadata\";\nimport { observableMain$ } from '../api'\nimport { Teams, TeamsStoreModel } from '../models/teams.model'\n\n@injectable()\nclass TeamsStore implements TeamsStoreModel {\n  @observable public teams: Teams | any = [];\n\n  @action\n  public async getTeams(): Promise<void> {\n    // try {\n    //   this.teams = await fetchMainApi();\n    // } catch (response) {\n    //   alert(response.message);\n    // }\n    observableMain$.subscribe({\n      next: (x) => { \n        this.teams = x\n      },\n      error: (err) => { console.error('something wrong occurred: ' + err) }\n    })\n  }\n\n  public getNameById(id: string): string {\n    // console.log('Teams Store -', id, this.teams)\n    // this.getTeams()\n    return this.teams.length ? R.find(R.propEq('id', id))(this.teams).name : []\n  }\n}\n\nexport { TeamsStore }\n","import { observable, action } from 'mobx'\nimport { injectable } from \"inversify\";\nimport { fetchPlayersApi } from '../api'\nimport { History, Players, PlayersStoreModel } from '../models/players.model'\n\n@injectable()\nclass PlayersStore implements PlayersStoreModel {\n  @observable players: Players = [];\n\n  @action\n  public async getPlayers(id: string): Promise<void> {\n    try{\n      this.players = await fetchPlayersApi(id);\n    } catch (response) {\n      alert(response.message);\n    }\n  }\n \n  public getPlayersHistory(userId: string): History {\n    return this.players.find(({id}) => id === userId)?.history || [];\n  }\n}\n\nexport { PlayersStore }\n","import { observable, action } from 'mobx'\nimport \"reflect-metadata\";\nimport { injectable, inject } from \"inversify\";\nimport { fetchGamesApi } from '../api'\nimport { Games, GamesStoreModel } from '../models/games.model'\nimport { TYPES } from \"../models/types\";\nimport { TeamsStoreModel } from '../models/teams.model';\n\n@injectable()\nclass GamesStore implements GamesStoreModel {\n\n  @inject(TYPES.TeamsStoreModel) private _teams!: TeamsStoreModel;\n\n  @observable games: Games = [];\n\n  @action\n  public async getGames(id: string): Promise<void> {\n    try {\n      this.games = await fetchGamesApi(id)\n    } catch (response) {\n      alert(response.message)\n    } finally {\n    }\n  }\n\n  @action\n  public getTeamNameById(id: string) {\n     return this._teams.getNameById(id)\n  }\n}\n\nexport {GamesStore}\n","import { Container } from \"inversify\";\nimport \"reflect-metadata\";\nimport { TYPES } from \"./types\";\nimport { TeamsStoreModel } from \"./teams.model\";\nimport { TeamsStore } from \"../store/teams.store\";\nimport { PlayersStoreModel } from \"./players.model\";\nimport { PlayersStore } from \"../store/players.store\";\nimport { GamesStoreModel } from \"./games.model\";\nimport { GamesStore } from \"../store/games.store\";\n\nconst mainContainer = new Container();\nmainContainer.bind<TeamsStoreModel>(TYPES.TeamsStoreModel).to(TeamsStore).inSingletonScope();\nmainContainer.bind<PlayersStoreModel>(TYPES.PlayersStoreModel).to(PlayersStore).inSingletonScope();\nmainContainer.bind<GamesStoreModel>(TYPES.GamesStoreModel).to(GamesStore).inSingletonScope();\n\n\nexport { mainContainer };","import React, {useEffect} from \"react\";\nimport { observer } from 'mobx-react-lite'\nimport { Card } from \"antd\";\nimport { history } from \"../../index\";\nimport { mainContainer } from \"../../models/inversify.config\";\nimport { TYPES } from \"../../models/types\";\nimport { Team, TeamsStoreModel } from \"../../models/teams.model\";\n\nconst { Meta } = Card;\nconst teamsStore = mainContainer.get<TeamsStoreModel>(TYPES.TeamsStoreModel);\n\nconst Home = observer(() => {\n\n  useEffect(() => {\n    teamsStore.getTeams()\n  },[])\n\n  const cardToogle = (id: string) => {\n    history.push(`/team/${id}`)\n  }\n\n  return (\n    <>\n      {console.log('HOME COMPONENT - Teams -', teamsStore.teams)}\n      {teamsStore.teams.map((team: Team) => {\n        return <Card\n          key={team.id}\n          hoverable\n          style={{ \n            width: 240,\n            margin: '0 20px',\n            padding: '10px 0',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          }}\n          cover={<img alt=\"example\" src={team.logo_url} style={{\n            height: 100,\n            width: 100,\n          }}\n          onClick={() => cardToogle(team.id)}/>}\n        >\n          <Meta title={team.name} description={'Budget - ' + team.budget} style={{textAlign: 'center'}}/>\n        </Card>\n      })}\n    </>\n  );\n});\n\nexport default Home;\n","import React, {useEffect} from \"react\";\nimport { observer } from 'mobx-react-lite'\nimport { history } from \"../../index\";\nimport { mainContainer } from \"../../models/inversify.config\";\nimport { TYPES } from \"../../models/types\";\nimport { PlayersStoreModel } from \"../../models/players.model\";\nimport { GamesStoreModel } from \"../../models/games.model\";\nimport { List, Avatar } from 'antd';\n\nconst playersStore = mainContainer.get<PlayersStoreModel>(TYPES.PlayersStoreModel);\nconst gamesStore = mainContainer.get<GamesStoreModel>(TYPES.GamesStoreModel);\n\nconst TeamComponent = observer(({match}: {match: {params: {id: string}}}) => {\n  const id = match.params.id\n\n  useEffect(() => {\n    playersStore.getPlayers(id);\n    gamesStore.getGames(id);\n  }, [id])\n\n  const playerToogle = (id: string) => {\n    history.push(`/player/${id}`)\n  }\n\n  if (!gamesStore.games || !gamesStore.games.length) {\n    return <h1>Test</h1>;\n  }\n\n  return (\n    <div style={{display: 'flex'}}>\n      <List\n        header={<div>Players</div>}\n        itemLayout=\"horizontal\"\n        dataSource={playersStore.players}\n        renderItem={(item: any) => (\n          <List.Item onClick={() => playerToogle(item.id)}>\n            <List.Item.Meta\n              avatar={<Avatar src={item.flag_url} />}\n              title={item.name}\n              description={`nationality - ${item.nationality}`}\n            />\n          </List.Item>\n        )}\n      />\n      <List\n        header={<div>Games</div>}\n        itemLayout=\"horizontal\"\n        dataSource={gamesStore.games}\n        style={{marginLeft: 30}}\n        renderItem={(item: any) => (\n          <List.Item>\n            <List.Item.Meta\n              title={<div>\n                {gamesStore.getTeamNameById(item.team_one_id) + ' -- ' + gamesStore.getTeamNameById(item.team_two_id)}\n                {/* {R.find(R.propEq('id', item.team_one_id))(teamsStore.teams).name + ' - ' + R.find(R.propEq('id', item.team_two_id))(teamsStore.teams).name} */}\n              </div>}\n              description={`${item.team_one_goals} - ${item.team_two_goals}`}\n            />\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n});\n\nexport default TeamComponent;\n","import React, {useEffect} from \"react\";\nimport { observer } from 'mobx-react-lite';\nimport { mainContainer } from \"../../models/inversify.config\";\nimport { TYPES } from \"../../models/types\";\nimport { PlayersStoreModel } from \"../../models/players.model\";\nimport { List } from 'antd';\n\nconst playersStore = mainContainer.get<PlayersStoreModel>(TYPES.PlayersStoreModel);\n\nconst Player = observer(({match}: {match: {params: {id: string}}}) => {\n  const id = match.params.id\n\n  useEffect(() => {\n    playersStore.getPlayers(\"a8986737-030e-4c2d-90c9-8313c18e483b\");\n  }, [])\n\n  if (!playersStore.players.length) {\n    return <h1>Test</h1>;\n  }\n\n  return (\n    <div style={{display: 'flex'}}>\n      {console.log('PLAYERS COMPONENT - ', playersStore.players)}\n      <List\n        header={<div>History</div>}\n        itemLayout=\"horizontal\"\n        dataSource={playersStore.getPlayersHistory(id)}\n        renderItem={(item: any) => (\n          <List.Item>\n            <List.Item.Meta\n              // title={R.find(R.propEq('id', item.team_id))(teamsStore.teams).name}\n              description={`goals - ${item.goals}`}\n            />\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n});\n\nexport default Player;\n","import React, {useState} from \"react\";\nimport './layout.scss';\nimport { observer } from 'mobx-react-lite'\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { Layout, Menu, Icon } from \"antd\";\n\nimport Home from '../home/home'\nimport TeamComponent from '../team/team'\nimport Player from '../player/player'\n\nconst { Header, Sider, Content } = Layout;\n\nconst MainLayout = observer(() => {\n  const [collapsed, setCollapsed] = useState(true)\n\n  return (\n    <Layout>\n      <Sider trigger={null} collapsible collapsed={collapsed}>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n          <Menu.Item key=\"1\">\n            <Icon type=\"user\" />\n            <span>Home</span>\n          </Menu.Item>\n          <Menu.Item key=\"2\">\n            <Icon type=\"video-camera\" />\n            <span>nav 2</span>\n          </Menu.Item>\n          <Menu.Item key=\"3\">\n            <Icon type=\"upload\" />\n            <span>nav 3</span>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout>\n        <Header style={{ background: '#fff', padding: 0 }}>\n          <Icon\n            className=\"trigger\"\n            type={collapsed ? 'menu-unfold' : 'menu-fold'}\n            onClick={() => setCollapsed(!collapsed)}\n          />\n        </Header>\n        <Content\n          style={{\n            margin: '24px 16px',\n            padding: 24,\n            background: '#fff',\n            minHeight: 'calc(100vh - 112px)',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'flex-start'\n          }}\n        >\n          <Switch>\n            <Route exact path=\"/\" render={() => (\n                <Redirect to=\"/home\"/>\n            )}/>\n            <Route exact path=\"/home\" component={Home} />\n            <Route path=\"/team/:id\" component={TeamComponent} />\n            <Route path=\"/player/:id\" component={Player} />\n          </Switch>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n});\n\nexport default MainLayout;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { createBrowserHistory } from \"history\";\nimport { Router } from \"react-router-dom\";\nimport Layout from './pages/main-layout/layout';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <Layout />\n  </Router>,\ndocument.getElementById('root'));\n"],"sourceRoot":""}